#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

# The preprocess block is used to generate dynamic pages, like archives,
# tag pages and meta-pages that are simple to generate, like the sitemap
# or feed.
#
# Simply create a new item, add it to the @items stack and you're set.
# Note: the preprocess block has no item context, so you cannot just call
# xml_sitemap or atom_feed directly. Instead, embed it in a string and filter
# that with erb.
preprocess do
  create_robots_txt
  create_webmaster_tools_authentications
  create_sitemap
end

# The base javascript and stylesheet files
compile %r{/assets/(lib|styles)/} do
  # Use erb to enable timestamps and author information and such.
  filter :erb
  filter :concat
  filter :coffeescript if item[:extension] == 'coffee'
  filter :sass, :syntax => :scss if item[:extension] == 'scss'
  filter :cache_buster
  filter :minify
end

# Don't filter or layout any google files, robots.txt, error pages or anything
# else in the assets directory.
compile %r{^/(google|robots|assets)} do
end

compile %r{^/(404)/$} do
  filter :erb
  filter :kramdown if item[:extension] == 'md'
  filter :typogruby
  layout 'simple'
  filter :cache_buster
end

# Sitemap and htaccess do get filtered with erb, but get no layout.
compile %r{^/(sitemap|htaccess)/$} do
  filter :erb
end

compile '/sitemap/', :rep => 'gzip' do
  filter :erb
  filter :shellcmd, :cmd => 'gzip'
end

compile '*' do
  filter :erb
  filter :kramdown if item[:extension] == 'md'
  filter :typogruby
  layout 'default'
  filter :cache_buster
end

# Don't inlcude any library files, as they should be included in the
# manifest files (lib.js, styles.css)
route '/assets/lib/*/' do
end

route '/' do
  '/index.html'
end

route '/htaccess/' do
  '/.htaccess'
end

route '/sitemap/', :rep => 'gzip' do
  '/sitemap.xml.gz'
end

route %r{^/(assets/.*|sitemap|robots|atom)/$} do
  ext = item[:extension]
  ext = 'js' if ext == 'coffee'
  ext = 'css' if ext == 'scss'

  fp = cachebust?(item) ? fingerprint(item[:filename]) : ''
  item.identifier.chop + fp + '.' + ext
end

route '*' do
  item.identifier.chop + '.html'
end

layout '*', :erb

