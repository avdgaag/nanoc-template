# A list of file extensions that nanoc will consider to be textual rather than
# binary. If an item with an extension not in this list is found,  the file
# will be considered as binary.
text_extensions: [ 'css', 'erb', 'haml', 'htm', 'html', 'js', 'less', 'markdown', 'md', 'php', 'rb', 'sass', 'scss', 'txt', 'xhtml', 'xml', 'coffee' ]

# The path to the directory where all generated files will be written to. This
# can be an absolute path starting with a slash, but it can also be path
# relative to the site directory.
output_dir: output

meta_data:
  # Default title, that is added to an item's own title
  title: Untitled website

  # Default author of a page
  author: Arjan van der Gaag

  # E-mail address used in contact information, etc.
  author_email: arjan@arjanvandergaag.nl

  # Default keywords to use when an item does not specify its own
  keywords: 'keyword1, keyword2'

  # Default description to use when an item does not specify its own
  description: Undescribed website.

  # Copyright line used in the document header meta tag.
  copyright: "© copyright 2010 Arjan van der Gaag. All rights reserved."

  # Tracking code for Google Analytics. Specifying this will include the
  # tracking code in your site's head section.
  ga_tracking_code:

  # Language code of the site's content. Used in HTML attributes.
  lang: 'en'

# The base URL for the website, for use in sitemaps etc. Something like
# http://domain.tld
base_url: http://domain.tld

# The path on the base URL users should be sent to when accessing the feed.
# This gets rewritten to point at your feedburner_url option, which will
# in turn know the location of the real URL.
feed_url: /feed
feedburner_url: http://feeds.feedburner.com/MyFeed

# Configure the robots.txt file for this site.
# Setting 'default' to true-ish will use sensible defaults. If you
# wish to customize it, you can list paths to allow and to disallow.
# Finally, you could manually set the path to the sitemap file.
#
# You can customize the robots file fairly well like this, but you
# can always manually create a content file with the exact contents
# you need.
robots:
  default: true # disallow assets, allow assets/images and point at sitemap
  # disallow:
  #   - '/tag'
  #   - '/newsletter'
  # allow:
  #   - '/tag/foo'
  # sitemap: '/site-map.txt'

# Set up authentication files for various webmaster tools (or something
# similar). This simply creates a plain text file when generating the site.
#
# identifier: identifier of the output file, e.g. '/google12345/'
# content: content of the file, e.g. 'aoa8202ns001'
# extension: extension of the output file, e.g. 'html' or 'xml'
webmaster_tools:
  -
    identifier:
    content:
    extension:

# Should Nanoc generate some standard asset files for you, or skip them
# completely?
#
# This currently controls the generation of robots.txt, sitemap.xml,
# sitemap.xml.gz and webmaster tools authentication files.
output_generated_assets: true

# Set up URL redirects in the .htacccess file to point old URLs to a new
# location, thereby keeping your SEO-mojo intact and visitors happy.
# redirects:
#   - from:  /path
#     to:    http://www.new-url.com/path

# Deployment targets using rsync. The default target will remove all that's
# already there and replace it with the contents of the /output directory.
deploy:
  default:
    dst: "host:path"
    options: ['-glpPrtvz', '--delete']
  staging:
    dst: "host:path"
    options: ['-glpPrtvz', '--delete']

# A list of index filenames, i.e. names of files that will be served by a web
# server when a directory is requested. Usually, index files are named
# “index.hml”, but depending on the web server, this may be something else,
# such as “default.htm”. This list is used by nanoc to generate pretty URLs.
index_filenames: [ 'index.html' ]

# Whether or not to generate a diff of the compiled content when compiling a
# site. The diff will contain the differences between the compiled content
# before and after the last site compilation.
enable_output_diff: false

# The data sources where nanoc loads its data from. This is an array of
# hashes; each array element represents a single data source. By default,
# there is only a single data source that reads data from the “content/” and
# “layout/” directories in the site directory.
data_sources:
  -
    # The type is the identifier of the data source. By default, this will be
    # `filesystem_unified`.
    type: filesystem_unified

    # The path where items should be mounted (comparable to mount points in
    # Unix-like systems). This is “/” by default, meaning that items will have
    # “/” prefixed to their identifiers. If the items root were “/en/”
    # instead, an item at content/about.html would have an identifier of
    # “/en/about/” instead of just “/about/”.
    items_root: /

    # The path where layouts should be mounted. The layouts root behaves the
    # same as the items root, but applies to layouts rather than items.
    layouts_root: /

    # Force encoding to be UTF-8. 
    encoding: 'UTF-8'
